# -*- mode: ruby -*-
# vi: set ft=ruby :

# Requires vagrant libvirt plugin

VAGRANTFILE_API_VERSION = "2"
Vagrant.require_version ">= 1.6.0"

NUM_INSTANCES = ENV['NUM_INSTANCES'] || 3
NODE_MEM= ENV['NODE_MEM'] || 8128
NODE_CPUS = ENV['NODE_CPUS'] || 4

BASE_NODE_NAME = ENV['BASE_NODE_NAME'] || "node-"
PUBLIC_NETWORK_PREFIX= ENV['PRIVATE_NETWORK_PREFIX'] || "192.168.55.1"  ## 192.168.55.1#{i}
PRIVATE_NETWORK_PREFIX= ENV['PRIVATE_NETWORK_PREFIX'] || "192.168.66.1"  ## 192.168.66.1#{i}
BRIDGE_IF = ENV['BRIDGE_IF'] || 'virbr0'

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'
IMAGE_NAME = "generic/ubuntu1804"

$script = <<SCRIPT
if [ -f /home/vagrant/id_rsa.pub ]; then
  cat /home/vagrant/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
fi
parted /dev/vdb print 2> /dev/null
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "generic/ubuntu1804"
  config.vm.box_check_update = false

  config.vm.provider :libvirt do |libvirt|
    libvirt.cpus = NODE_CPUS
    libvirt.memory = NODE_MEM
    libvirt.driver = "kvm"
    libvirt.keymap = "es"
    libvirt.storage :file, 
      :size => '1G',
      :type => 'qcow2'
  end

  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/id_rsa.pub"

  (1..NUM_INSTANCES.to_i).each do |i|
    hostname = "#{BASE_NODE_NAME}#{i}"
    config.vm.define "#{BASE_NODE_NAME}#{i}"do |node|
      node.vm.box = IMAGE_NAME
      node.vm.provision "shell", inline: $script

      node.vm.network :public_network,
        :dev => BRIDGE_IF,
        :bridge => BRIDGE_IF,
        :type => "bridge",
        :mode => "bridge",
        :ip => "#{ PUBLIC_NETWORK_PREFIX}#{ i }"
      node.vm.network :private_network,
        :ip => "#{ PRIVATE_NETWORK_PREFIX}#{ i }"
      node.vm.hostname = "#{BASE_NODE_NAME}#{i}"
    end
    puts "#{ hostname } -->" +
      " CPUs: #{ NODE_CPUS }" +
      ", RAM: #{ NODE_MEM } MB" +
      ", IP (private net): #{ PRIVATE_NETWORK_PREFIX}#{ i }"
  end    
end

